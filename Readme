This is intended to be a quick guide to getting started with Cheetah 
Thanks to:
	Chuck Yoon
	Rick Kirian
	Nadia Zatsepin
	Oleksandr Yefanov
	Anton Barty
	


There are a couple of steps to follow when starting from scratch:

1. Compile libcheetah (the analysis part of the code)
2. Link libcheetah to the file reading front-end (currently psana at LCLS)
3. Set up environment configuration (where are the programs, where is the data?)
4. Run the analysis script


Some knowledge of your computing architecture is assumed.

------------------------------------------------------------------------
1. Compiling libcheetah
------------------------------------------------------------------------

Look at:  examples/build-libcheetah

This script executes the makefile in source/, but it first sets a few environment variables.
Here's what is in the script:

>------------------------------------------------------------------------<
export HDF5DIR=/reg/neh/home/rkirian/local
export CHEETAHDIR=/reg/neh/home/rkirian/software/cheetah
export LD_LIBRARY_PATH="/reg/neh/home/rkirian/local/lib:/reg/neh/home/rkirian/software/cheetah/source/lcls/myana/release/build/pdsdata/lib/x86_64-linux"
export LD_RUN_PATH="/reg/neh/home/rkirian/local/lib:/reg/neh/home/rkirian/software/cheetah/source/lcls/myana/release/build/pdsdata/lib/x86_64-linux"

make cheetah
make libcheetah

cp cheetah /reg/d/psdm/cxi/cxi54312/scratch/programs/bin/cheetah-rick
cp cheetah /reg/neh/home/rkirian/local/bin
cp libcheetah.so.* /reg/neh/home/rkirian/local/lib
>------------------------------------------------------------------------<

Copy this script and edit these fields to point to where things are for you.

Make sure to point to a thread-safe version of the HDF5 library.  
If you don't things will appear to run, but randomly crash with segmentation faults whenever two threads try to write an HDF5 file at the same time.
Simply add "--enable-threadsafe" to the hdf5 ./configure command.
hdf5-directory > ./configure --enable-threadsafe








