cmake_minimum_required(VERSION 2.6)

PROJECT (cheetah)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")

SET(ENABLE_RUNPATH FALSE CACHE BOOL "Try to use DT_RUNPATH on binaries. Unlikely to work.")
MARK_AS_ADVANCED(ENABLE_RUNPATH)
IF(CMAKE_COMPILER_IS_GNUCC)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -std=c99")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
	if(ENABLE_RUNPATH)
		# Use RUNPATH instead of RPATH
		SET(CMAKE_EXE_LINKER_FLAGS "-Wl,--enable-new-dtags")
		SET(CMAKE_SHARED_LINKER_FLAGS "-Wl,--enable-new-dtags")
	endif(ENABLE_RUNPATH)
ENDIF(CMAKE_COMPILER_IS_GNUCC)

SET(RPATH_ON_INSTALLED_BINS TRUE CACHE BOOL "Keep RPATH on installed binaries")
SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH ${RPATH_ON_INSTALLED_BINS})

#SET(CMAKE_INSTALL_RPATH ${CMAKE_INSTALL_PREFIX}/lib${LIB_SUFFIX})

#SET(BUILD_LIBCHEETAH ON CACHE BOOL "If ON build libcheetah. Otherwise skip it.")
SET(BUILD_CHEETAH_ANA_MOD ON CACHE BOOL "If ON build cheetah_ana_mod. Otherwise skip it.")
SET(BUILD_PSANA ON CACHE BOOL "If ON build psana. Otherwise skip it.")
SET(BUILD_CHEETAH_MYANA OFF CACHE BOOL "If ON build cheetah_myana. Otherwise skip it.")


SET(CHEETAH_INCLUDES ${CMAKE_SOURCE_DIR}/libcheetah/include CACHE PATH "libcheet
ah include directory")
MARK_AS_ADVANCED(CHEETAH_INCLUDES)
SET(CHEETAH_LIBRARY ${CMAKE_BINARY_DIR}/libcheetah/libcheetah.so CACHE FILEPATH 
"libcheetah to link against")
MARK_AS_ADVANCED(CHEETAH_LIBRARY)

#if(BUILD_LIBCHEETAH)
ADD_SUBDIRECTORY(libcheetah)
#endif(BUILD_LIBCHEETAH)

if(BUILD_CHEETAH_ANA_MOD)
ADD_SUBDIRECTORY(cheetah_ana_pkg)
endif(BUILD_CHEETAH_ANA_MOD)

if(BUILD_PSANA)
ADD_SUBDIRECTORY(psana)
endif(BUILD_PSANA)

if(BUILD_CHEETAH_MYANA)
ADD_SUBDIRECTORY(cheetah_myana)
endif(BUILD_CHEETAH_MYANA)

# Lets try to build Psana just for kicks
